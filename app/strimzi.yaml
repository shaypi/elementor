---
apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: my-cluster
  namespace: strimzi
spec:
  kafka:
    replicas: 3
    version: 3.4.0
    listeners:
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: external
        port: 9093
        type: loadbalancer
        tls: false
      - name: lb
        port: 9094
        type: loadbalancer
        tls: false
    storage:
      type: jbod
      volumes:
        - id: 0
          type: persistent-claim
          size: 1Gi
          deleteClaim: false
    config:
      offsets.topic.replication.factor: 1
      transaction.state.log.replication.factor: 1
      transaction.state.log.min.isr: 1
      default.replication.factor: 1
      min.insync.replicas: 1
      auto.create.topics.enable: true
  zookeeper:
    replicas: 1
    storage:
      type: persistent-claim
      size: 1Gi
      deleteClaim: false
  entityOperator:
    topicOperator: {}
    userOperator: {}
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: my-connect-cluster
  namespace: strimzi
  annotations:
    strimzi.io/use-connector-resources: "true"
spec:
  version: 3.4.0
  replicas: 1
  bootstrapServers: my-cluster-kafka-bootstrap:9092
  livenessProbe:
    initialDelaySeconds: 45
    timeoutSeconds: 5
  readinessProbe:
    initialDelaySeconds: 15
    timeoutSeconds: 5
  config:
    group.id: connect-cluster
    offset.storage.topic: connect-cluster-offsets
    config.storage.topic: connect-cluster-configs
    status.storage.topic: connect-cluster-status
    config.storage.replication.factor: 1
    offset.storage.replication.factor: 1
    status.storage.replication.factor: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: my-topic
  namespace: strimzi
  labels:
    strimzi.io/cluster: my-cluster
spec:
  partitions: 10
  replicas: 1
  config:
    retention.ms: 7200000
    segment.bytes: 1073741824
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kowl
  namespace: strimzi
data:
  KAFKA_BROKERS: my-cluster-kafka-loadbalancer-0:9094
  SERVER_BASEPATH: kowl
  CONNECT_ENABLED: "true"
  CONNECT_CLUSTERS_NAME: my-connect-cluster
  CONNECT_CLUSTERS_URL: http://my-connect-cluster-connect-api:8083
---
apiVersion: v1
kind: Service
metadata:
  name: kowl
  namespace: strimzi
  labels:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 2.3.1
spec:
  selector:
    app: kowl
  ports:
  - protocol: TCP
    name: http
    port: 80
    targetPort: 8080
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kowl
  namespace: strimzi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kowl
  template:
    metadata:
      labels:
        app: kowl
    spec:
      containers:
        - envFrom:
          - configMapRef:
              name: kowl
          image: quay.io/cloudhut/kowl:latest
          imagePullPolicy: IfNotPresent
          name: kowl
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kowl
  namespace: strimzi
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '7'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
  labels:
    app.kubernetes.io/name: kowl
    app.kubernetes.io/version: 2.3.1
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kowl
            port:
              number: 80
